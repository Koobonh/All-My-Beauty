package com.amb.bcomment.service;

import org.springframework.stereotype.Service;

import com.amb.bcomment.domain.BCommentVO;
import com.amb.bcomment.mapper.BCommentMapper;
import com.amb.bcomment.paging.BCommentPagingCreatorDTO;
import com.amb.bcomment.paging.BCommentPagingDTO;

import lombok.extern.log4j.Log4j;

@Service
@Log4j
public class BCommentServiceImpl implements BCommentService{
	
	private BCommentMapper bcommentMapper;
	
	public BCommentServiceImpl(BCommentMapper bcommentMapper) {
		this.bcommentMapper = bcommentMapper;
	}
	//특정 게시물에 대한 전체 댓글 조회
	@Override
	public BCommentPagingCreatorDTO selectCnoListTotalByBno(BCommentPagingDTO bcommentPaging) {
		log.info("전달된 BCommentPagingDTO: "+ bcommentPaging);
		BCommentPagingCreatorDTO bcommentPagingCreator =
					new BCommentPagingCreatorDTO(
						bcommentMapper.selectCnoTotalByBno(bcommentPaging),
						bcommentPaging,
						bcommentMapper.selectCnoList(bcommentPaging));
		
		return bcommentPagingCreator;
	}
	//특정 게시물에 댓글 등록
	@Override
	public long registerCnoForBoard(BCommentVO bcomment) {
		log.info("처음 전달된 BCommentVO: " + bcomment);
		
		bcommentMapper.insertBCommentForBoard(bcomment);
		
		
		return bcomment.getCno();
	}
	//특정 게시물의 총 댓글 갯수 확인
	@Override
	public long selectCnoTotalByBno(BCommentPagingDTO bcommentPaging) {
		return bcommentMapper.selectCnoTotalByBno(bcommentPaging);
	}
	//특정 댓글에 대한 답글 등록
	@Override
	public long registerCnoForReply(BCommentVO bcommeBntVO) {
		
		bcommentMapper.insertBCommentForReply(bcommeBntVO);
		
		
		return bcommeBntVO.getCno();
	}
	//특정 댓글 조회
	@Override
	public BCommentVO selectBComment(long bno, long cno) {
		
		BCommentVO bcomment= bcommentMapper.selectBComment(bno, cno);
		return bcomment;
	}
	
	//특정 댓글 수정
	@Override
	public int modifyCno(BCommentVO bcommeBntVO);

	@Override
	public int modifyCno(BCommentVO bcommeBntVO) {
		// TODO Auto-generated method stub
		return 0;
	}

	@Override
	public int removeCno(long bno, long cno) {
		// TODO Auto-generated method stub
		return 0;
	}
	
}
