<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">


	<bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
	
<!-- 	운영 시 -->
	
	<!-- </property>
	
	 <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
	<property name="jdbcUrl" value="jdbc:oracle:thin:@localhost:1521:orcl"></property>
	<property name="username" value="book_ex"></property>
	<property name="password" value ="book_ex"></property>  -->
	
	<!-- 개발 시 -->
	
	<property name="driverClassName" value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
	<property name="jdbcUrl" value="jdbc:log4jdbc:oracle:thin:@localhost:1521:orcl"></property>
	<property name="username" value="Koo"></property>
	<property name="password" value ="oracle4U"></property>
	
	
	</bean>
	<bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
		<!-- 생성자를 이용한 주입방식 -->
		<constructor-arg ref="hikariConfig"/> <!-- ref= bean을 주입받는 거고 bean의 아이디를 쓰는것!! 카멜방식 그대론데 첫글자 소문자 -->
	
	</bean>
	
	<!--  setter 방식 주입 : property 태그의 ref 속성으로 주입됨  -->
	<!-- <value>classpath:mapper/MyBoardMapper.xml</value>
				<value>classpath:mapper/MyReplyMapper.xml</value> -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref = "dataSource"></property>
		<property name="configLocation" value="classpath:/mapper/mybatisConfig.xml"></property>
		<property name="mapperLocations">
			<list>
				
				<value>classpath:mapper/TimeMapper.xml</value> 

				<value>classpath:com/spring5218/mypro00/mapper/MyBoardMapper.xml</value>
				<value>classpath:com/spring5218/mypro00/mapper/MyReplyMapper.xml</value>
				<value>classpath:com/spring5218/mypro00/mapper/MyBoardAttachFileMapper.xml</value>
				
			</list>
		</property>
	</bean>
	
	<bean id = "sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- 
	    <bean id ="myChef" class = "sample.Chef">
	    </bean>
	                                      setter로 가져와야함
		<bean id ="myRestaurant" class = "sample.Restaurant">
			
			Setter 방식 주입
			<property name="chef" ref="myChef"></property>
			<constructor-arg ref="myChef"></constructor-arg>
		</bean> 
		
		 -->
		
		<mybatis-spring:scan base-package="com.spring5218.mypro00.mapper"/> 
		<!-- <context:component=scan base-package="sample"/> --> 
		<!-- <mybatis-spring:scan base-package="sample.chap19.mapper"/> -->
		
	<!-- 스프링 트랜잭션 기능 활성화  -->
		<tx:annotation-driven/>
		
	<!-- Spring Transaction 관리자(매니저) 빈(dataSource빈을 주입받음) -->	
	
		<bean id = "transactionManager"
			  class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource"></property>
		</bean>
	
</beans>
